include /setup

mixin sg-heading(props = {})
	-
		props = Object.assign({
			content: "",
		}, props);
		const separator = ":";
		const splitedContent = props.content.split(separator);
		const currentContent = splitedContent[splitedContent.length - 1];
		const level = splitedContent.length + 1;
		const id = splitedContent.map(encodeURIComponent).join(separator);

	.sg-heading(class=`sg-heading--level${level}`)
		#{`h${level}`}.sg-heading__content(id=id)= currentContent
		a(href=`#${id}`, aria-label=`${currentContent}へのリンク`) #

mixin sg-demo(props = {})
	-
		props = Object.assign({
			noGutters: false,
			guide: false,
		}, props);

	.sg-demo(
		class={
		  'sg-demo--no-gutters': props.noGutters,
		  'sg-demo--guide': props.guide,
		}
	)
		.sg-demo__inner
			block

doctype html
html(lang=metadata.lang)
	head
		meta(charset=metadata.encoding)

		title= `${title} - スタイルガイド`

		meta(name="viewport", content="width=device-width")
		meta(name="description", content=description)

		link(
			rel="canonical",
			href=`${metadata.scheme}://${metadata.domain}${url(page.url)}`
		)
		if !env.isDev
			link(rel="stylesheet", href=assetPath('main.css'))

		script(defer, nomodule, src=assetPath('polyfill-nomodule.js'))
		script(defer, src=assetPath('main.js'))

		style.
			body {
			  background-color: hsl(0, 0%, 96%);
			}

			.sg-page {
			  padding-top: 4rem;
			  padding-bottom: 4rem;
			}

			.sg-nav {
			  overflow: hidden;
			}

			.sg-nav ul {
			  display: flex;
			  flex-wrap: wrap;
			  justify-content: center;
			  margin: -0.25rem -0.5rem;
			}

			.sg-nav li {
			  margin: 0.25rem 0.5rem;
			}

			.sg-nav a {
			  display: block;
			  text-decoration: underline;
			}

			.sg-nav a[aria-current='page'] {
			  text-decoration: none;
			}

			.sg-header {
			  text-align: center;
			}

			.sg-header h1 {
			  margin-top: 2rem;
			  font-family: system-ui, sans-serif;
			  font-size: 3rem;
			  line-height: 1.3;
			  font-weight: bold;
			}

			.sg-header p {
			  margin-top: 1rem;
			}

			.sg-footer {
			  margin-top: 8rem;
			}

			.sg-center {
			  box-sizing: content-box;
			  max-width: 40rem;
			  margin-right: auto;
			  margin-left: auto;
			  padding-right: 1rem;
			  padding-left: 1rem;
			}

			.sg-heading {
			  font-family: system-ui, sans-serif;
			  line-height: 1.3;
			  font-weight: bold;
			}

			.sg-heading--level2 {
			  margin-top: 8rem;
			  font-size: 3rem;
			}

			.sg-heading--level3 {
			  margin-top: 4rem;
			  font-size: 2rem;
			}

			.sg-heading__content {
			  display: inline;
			}

			.sg-heading a {
			  margin-left: 0.5em;
			  font-size: 0.75em;
			  color: hsl(0, 0%, 60%);
			}

			.sg-heading ~ p {
			  margin-top: 1rem;
			  line-height: 1.7;
			}

			.sg-heading ~ p a {
			  text-decoration: underline;
			}

			.sg-demo {
			  margin-top: 2rem;
			  padding: 1rem;
			  background-color: hsl(0, 0%, 100%);
			}

			.sg-demo--no-gutters {
			  padding-right: 0;
			  padding-left: 0;
			}

			.sg-demo__inner {
			  position: relative;
			}

			.sg-demo--guide .sg-demo__inner * {
			  outline: 1px solid red;
			}
		
	body
		.sg-page
			.sg-center
				nav.sg-nav
					ul
						each styleGuide in eleventyNavigation(collections.all, 'スタイルガイド')
							- const current = page.url === styleGuide.url;
							li
								a(href=url(styleGuide.url), aria-current=current && 'page')= styleGuide.title

				header.sg-header
					h1= title
					p= description

			main
				block body

			footer.sg-footer
				.sg-center
					.sg-nav
						ul
							each styleGuide in eleventyNavigation(collections.all, 'スタイルガイド')
								- const current = page.url === styleGuide.url;
								li
									a(href=url(styleGuide.url), aria-current=current && 'page')= styleGuide.title
